name: Create and Publish Release
on:
  push:
    tags:
      - '*/v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Required to push container images to GHCR

    steps:
      # Step 1: Check out the repository code at the specific tag.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Parse the project name and version from the Git tag.
      # This is the core of the generalization.
      - name: Parse Project Name and Version from Tag
        id: parse_tag
        run: |
          # The full tag (e.g., 'we-quota-checker/v1.0.0') is in the github.ref_name variable
          FULL_TAG="${{ github.ref_name }}"
          # Split the string by '/' to get the project name
          PROJECT_NAME=$(echo $FULL_TAG | cut -d'/' -f1)
          # Split the string to get the version
          VERSION=$(echo $FULL_TAG | cut -d'/' -f2)
          
          echo "Project Name: $PROJECT_NAME"
          echo "Version: $VERSION"
          
          # Set outputs for later steps to use
          echo "project_name=$PROJECT_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # Step 3: Log in to the GitHub Container Registry (GHCR).
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 4: Extract metadata for Docker (image name and tags).
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          # Image name is built dynamically from the parsed project name
          images: ghcr.io/${{ github.repository_owner }}/${{ steps.parse_tag.outputs.project_name }}
          # Create multiple tags based on the Git tag:
          tags: |
            type=semver,pattern={{version}},value=${{ steps.parse_tag.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.parse_tag.outputs.version }}
            type=semver,pattern={{major}},value=${{ steps.parse_tag.outputs.version }}
            type=raw,value=latest,enable=true

      # Step 5: Build the image for the specific project and push it with all the generated tags.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          # Context is the path to the project directory, determined from the tag
          context: ./${{ steps.parse_tag.outputs.project_name }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}